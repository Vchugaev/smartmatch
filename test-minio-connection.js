const Minio = require('minio');

async function testMinioConnection() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MinIO...\n');

  const minioClient = new Minio.Client({
    endPoint: 'storage.vchugaev.ru',
    port: 443,
    useSSL: true,
    accessKey: 'adminuser',
    secretKey: 'strongpassword'
  });

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MinIO...');
    const bucketName = 'smartmatch';
    
    const exists = await minioClient.bucketExists(bucketName);
    console.log(`‚úÖ Bucket '${bucketName}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, exists);

    if (!exists) {
      console.log('üì¶ –°–æ–∑–¥–∞–µ–º bucket...');
      await minioClient.makeBucket(bucketName, 'us-east-1');
      console.log('‚úÖ Bucket —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞...');
    const testData = Buffer.from('Hello MinIO!', 'utf8');
    const fileName = 'test-connection.txt';

    await minioClient.putObject(bucketName, fileName, testData, testData.length, {
      'Content-Type': 'text/plain'
    });
    console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ presigned URL
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º presigned URL...');
    const presignedUrl = await minioClient.presignedGetObject(bucketName, fileName, 3600);
    console.log('‚úÖ Presigned URL —Å–æ–∑–¥–∞–Ω:', presignedUrl);

    // –û—á–∏—Å—Ç–∫–∞
    console.log('\n4Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞...');
    await minioClient.removeObject(bucketName, fileName);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');

    console.log('\nüéâ MinIO –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MinIO:', error.message);
    console.error('   –î–µ—Ç–∞–ª–∏:', error);
  }
}

testMinioConnection();
