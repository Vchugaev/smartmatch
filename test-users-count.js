const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BASE_URL = 'http://localhost:3000';
const ADMIN_TOKEN = 'your_admin_jwt_token_here'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω

async function testUsersCountEndpoint() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ GET /admin/users/count');
    console.log('=' .repeat(50));

    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüìä –¢–µ—Å—Ç 1: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    const response1 = await axios.get(`${BASE_URL}/admin/users/count`, {
      headers: {
        'Authorization': `Bearer ${ADMIN_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç:', response1.data);
    console.log('üìà –°—Ç–∞—Ç—É—Å:', response1.status);

    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏
    console.log('\nüë• –¢–µ—Å—Ç 2: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–æ–ª–∏ HR');
    const response2 = await axios.get(`${BASE_URL}/admin/users/count?role=HR`, {
      headers: {
        'Authorization': `Bearer ${ADMIN_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç:', response2.data);
    console.log('üìà –°—Ç–∞—Ç—É—Å:', response2.status);

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüü¢ –¢–µ—Å—Ç 3: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    const response3 = await axios.get(`${BASE_URL}/admin/users/count?isActive=true`, {
      headers: {
        'Authorization': `Bearer ${ADMIN_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç:', response3.data);
    console.log('üìà –°—Ç–∞—Ç—É—Å:', response3.status);

    // –¢–µ—Å—Ç 4: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    console.log('\nüîç –¢–µ—Å—Ç 4: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (—Ä–æ–ª—å + –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)');
    const response4 = await axios.get(`${BASE_URL}/admin/users/count?role=UNIVERSITY&isActive=true`, {
      headers: {
        'Authorization': `Bearer ${ADMIN_TOKEN}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç:', response4.data);
    console.log('üìà –°—Ç–∞—Ç—É—Å:', response4.status);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:');
    console.log('  - role: HR, UNIVERSITY, CANDIDATE, ADMIN, MODERATOR');
    console.log('  - isActive: true/false');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    console.error('üìä –°—Ç–∞—Ç—É—Å:', error.response?.status);
    console.error('üîç –î–µ—Ç–∞–ª–∏:', error.response?.config?.url);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testUsersCountEndpoint();
}

module.exports = { testUsersCountEndpoint };
