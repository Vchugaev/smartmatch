/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∫–ª–∏–∫–∞
 */

const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function debugApplicationStatus() {
  try {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–∫–ª–∏–∫–∞...\n');

    // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
    console.log('1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞...');
    const candidateResponse = await axios.post(`${BASE_URL}/auth/register`, {
      email: 'debug@example.com',
      password: 'password123',
      role: 'CANDIDATE',
      firstName: '–û—Ç–ª–∞–¥–∫–∞',
      lastName: '–¢–µ—Å—Ç'
    });
    console.log('‚úÖ –ö–∞–Ω–¥–∏–¥–∞—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', candidateResponse.data.user.email);

    const token = candidateResponse.data.access_token;
    const headers = { Authorization: `Bearer ${token}` };

    // 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è HR
    console.log('\n2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è HR...');
    const hrResponse = await axios.post(`${BASE_URL}/auth/register`, {
      email: 'hr-debug@example.com',
      password: 'password123',
      role: 'HR',
      firstName: 'HR',
      lastName: '–û—Ç–ª–∞–¥–∫–∞'
    });
    const hrToken = hrResponse.data.access_token;
    const hrHeaders = { Authorization: `Bearer ${hrToken}` };

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
    console.log('\n3. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏...');
    const jobResponse = await axios.post(`${BASE_URL}/jobs`, {
      title: 'Debug Developer',
      description: '–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è',
      location: '–ú–æ—Å–∫–≤–∞',
      type: 'FULL_TIME',
      experienceLevel: 'JUNIOR'
    }, { headers: hrHeaders });
    const jobId = jobResponse.data.id;
    console.log('‚úÖ –í–∞–∫–∞–Ω—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞:', jobResponse.data.title, 'ID:', jobId);

    // 4. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ë–ï–ó –æ—Ç–∫–ª–∏–∫–∞ (—Å —Ç–æ–∫–µ–Ω–æ–º)
    console.log('\n4. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ë–ï–ó –æ—Ç–∫–ª–∏–∫–∞ (—Å —Ç–æ–∫–µ–Ω–æ–º)...');
    const jobDetailsBefore = await axios.get(`${BASE_URL}/jobs/${jobId}`, { headers });
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   - hasApplied:', jobDetailsBefore.data.hasApplied);
    console.log('   - applicationStatus:', jobDetailsBefore.data.applicationStatus);
    console.log('   - applicationId:', jobDetailsBefore.data.applicationId);

    // 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞
    console.log('\n5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞...');
    const applicationResponse = await axios.post(`${BASE_URL}/applications`, {
      jobId: jobId,
      coverLetter: '–û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ—Ç–∫–ª–∏–∫'
    }, { headers });
    console.log('‚úÖ –û—Ç–∫–ª–∏–∫ —Å–æ–∑–¥–∞–Ω:', applicationResponse.data.id);

    // 6. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ü–û–°–õ–ï –æ—Ç–∫–ª–∏–∫–∞ (—Å —Ç–æ–∫–µ–Ω–æ–º)
    console.log('\n6. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ü–û–°–õ–ï –æ—Ç–∫–ª–∏–∫–∞ (—Å —Ç–æ–∫–µ–Ω–æ–º)...');
    const jobDetailsAfter = await axios.get(`${BASE_URL}/jobs/${jobId}`, { headers });
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   - hasApplied:', jobDetailsAfter.data.hasApplied);
    console.log('   - applicationStatus:', jobDetailsAfter.data.applicationStatus);
    console.log('   - applicationId:', jobDetailsAfter.data.applicationId);
    console.log('   - appliedAt:', jobDetailsAfter.data.appliedAt);

    // 7. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ë–ï–ó —Ç–æ–∫–µ–Ω–∞
    console.log('\n7. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –ë–ï–ó —Ç–æ–∫–µ–Ω–∞...');
    const jobDetailsAnonymous = await axios.get(`${BASE_URL}/jobs/${jobId}`);
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   - hasApplied:', jobDetailsAnonymous.data.hasApplied);
    console.log('   - applicationStatus:', jobDetailsAnonymous.data.applicationStatus);

    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:');
    if (jobDetailsAfter.data.hasApplied) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç–∫–ª–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞: hasApplied = false, —Ö–æ—Ç—è –æ—Ç–∫–ª–∏–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
      console.log('   - –ù–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞');
      console.log('   - –û—Ç–∫–ª–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log('   - –û—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ –ø–æ–∏—Å–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏
if (require.main === module) {
  debugApplicationStatus();
}

module.exports = { debugApplicationStatus };
