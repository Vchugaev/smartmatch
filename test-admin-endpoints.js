// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoints –ø—Ä–æ—Ñ–∏–ª–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function testAdminEndpoints() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints –ø—Ä–æ—Ñ–∏–ª–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...\n');

  try {
    // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const registerResponse = await axios.post(`${API_BASE}/auth/register`, {
      email: 'testadmin@example.com',
      password: 'admin123456',
      role: 'ADMIN'
    });

    const adminToken = registerResponse.data.accessToken;
    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log(`   –¢–æ–∫–µ–Ω: ${adminToken.substring(0, 20)}...`);

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    try {
      const profileResponse = await axios.get(`${API_BASE}/profiles/admin`, {
        headers: {
          'Authorization': `Bearer ${adminToken}`
        }
      });
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω');
      console.log(`   ID: ${profileResponse.data.id}`);
      console.log(`   –ò–º—è: ${profileResponse.data.firstName} ${profileResponse.data.lastName}`);
      console.log(`   –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${profileResponse.data.position}`);
      console.log(`   –û—Ç–¥–µ–ª: ${profileResponse.data.department}`);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error.response?.data || error.message);
    }

    // 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('\n3Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    try {
      const updateResponse = await axios.patch(`${API_BASE}/profiles/admin`, {
        firstName: '–ì–ª–∞–≤–Ω—ã–π',
        lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        position: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        department: 'IT –æ—Ç–¥–µ–ª',
        phone: '+7 (999) 123-45-67'
      }, {
        headers: {
          'Authorization': `Bearer ${adminToken}`
        }
      });
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω');
      console.log(`   –ò–º—è: ${updateResponse.data.firstName} ${updateResponse.data.lastName}`);
      console.log(`   –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${updateResponse.data.position}`);
      console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${updateResponse.data.phone}`);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error.response?.data || error.message);
    }

    // 4. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    console.log('\n4Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞...');
    const moderatorResponse = await axios.post(`${API_BASE}/auth/register`, {
      email: 'testmoderator@example.com',
      password: 'moderator123456',
      role: 'MODERATOR'
    });

    const moderatorToken = moderatorResponse.data.accessToken;
    console.log('‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log(`   –¢–æ–∫–µ–Ω: ${moderatorToken.substring(0, 20)}...`);

    // 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    console.log('\n5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞...');
    try {
      const moderatorProfileResponse = await axios.get(`${API_BASE}/profiles/moderator`, {
        headers: {
          'Authorization': `Bearer ${moderatorToken}`
        }
      });
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω');
      console.log(`   ID: ${moderatorProfileResponse.data.id}`);
      console.log(`   –ò–º—è: ${moderatorProfileResponse.data.firstName} ${moderatorProfileResponse.data.lastName}`);
      console.log(`   –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${moderatorProfileResponse.data.position}`);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:', error.response?.data || error.message);
    }

    // 6. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é...');
    try {
      await axios.get(`${API_BASE}/profiles/admin`, {
        headers: {
          'Authorization': `Bearer ${moderatorToken}`
        }
      });
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø—Ä–æ—Ñ–∏–ª—é (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)');
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('‚úÖ –£–°–ü–ï–•: –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø—Ä–æ—Ñ–∏–ª—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞');
        console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response.data.message}`);
      } else {
        console.log('‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê:', error.response?.data || error.message);
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –†–µ–∑—é–º–µ:');
    console.log('   ‚úÖ Endpoint /profiles/admin —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ Endpoint /profiles/moderator —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAdminEndpoints();
