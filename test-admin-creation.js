const http = require('http');

function createAdmin() {
  const postData = JSON.stringify({
    email: 'admin@smartmatch.com',
    password: 'AdminPassword123!',
    role: 'ADMIN'
  });

  const options = {
    hostname: 'localhost',
    port: 3000,
    path: '/auth/register',
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(postData)
    }
  };

  const req = http.request(options, (res) => {
    console.log(`Status: ${res.statusCode}`);
    console.log(`Headers: ${JSON.stringify(res.headers)}`);
    
    let data = '';
    res.on('data', (chunk) => {
      data += chunk;
    });
    
    res.on('end', () => {
      console.log('Response:', data);
      if (res.statusCode === 201 || res.statusCode === 200) {
        console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
        const response = JSON.parse(data);
        console.log('üìß Email:', response.user.email);
        console.log('üîë Role:', response.user.role);
        console.log('üé´ Token –ø–æ–ª—É—á–µ–Ω!');
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      }
    });
  });

  req.on('error', (e) => {
    console.error(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º: ${e.message}`);
    console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
  });

  req.write(postData);
  req.end();
}

console.log('üîß –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ API...');
createAdmin();
