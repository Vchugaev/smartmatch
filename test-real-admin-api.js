// –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω endpoints
const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function testRealAdminAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –†–ï–ê–õ–¨–ù–´–• –∞–¥–º–∏–Ω endpoints...\n');

  try {
    // 1. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'admin@example.com', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email
      password: 'admin123456'     // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
    });

    const adminToken = loginResponse.data.accessToken;
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');
    console.log(`   –¢–æ–∫–µ–Ω: ${adminToken.substring(0, 20)}...`);

    // 2. –¢–µ—Å—Ç –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/analytics/overview...');
    try {
      const overviewResponse = await axios.get(`${API_BASE}/admin/analytics/overview`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(overviewResponse.data, null, 2));
      
      if (overviewResponse.data.overview) {
        console.log('   üìä –ú–µ—Ç—Ä–∏–∫–∏:');
        console.log(`      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${overviewResponse.data.overview.totalUsers}`);
        console.log(`      –í–∞–∫–∞–Ω—Å–∏–∏: ${overviewResponse.data.overview.totalJobs}`);
        console.log(`      –û—Ç–∫–ª–∏–∫–∏: ${overviewResponse.data.overview.totalApplications}`);
        console.log(`      –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: ${overviewResponse.data.overview.pendingModeration}`);
      }
      
      if (overviewResponse.data.recentActivity) {
        console.log(`   üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${overviewResponse.data.recentActivity.length} —Å–æ–±—ã—Ç–∏–π`);
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error.response?.data || error.message);
    }

    // 3. –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/users...');
    try {
      const usersResponse = await axios.get(`${API_BASE}/admin/users?page=1&limit=5`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(usersResponse.data, null, 2));
      
      if (usersResponse.data.users) {
        console.log(`   üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.data.users.length}`);
        console.log(`   üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${usersResponse.data.page} –∏–∑ ${usersResponse.data.totalPages}`);
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.response?.data || error.message);
    }

    // 4. –¢–µ—Å—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/moderation/jobs...');
    try {
      const moderationResponse = await axios.get(`${API_BASE}/admin/moderation/jobs?status=PENDING&limit=3`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –í–∞–∫–∞–Ω—Å–∏–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –ø–æ–ª—É—á–µ–Ω—ã:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(moderationResponse.data, null, 2));
      
      if (moderationResponse.data.jobs) {
        console.log(`   üíº –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: ${moderationResponse.data.jobs.length}`);
        console.log(`   üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ${moderationResponse.data.page} –∏–∑ ${moderationResponse.data.totalPages}`);
      }
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π:', error.response?.data || error.message);
    }

    // 5. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/moderation/stats...');
    try {
      const statsResponse = await axios.get(`${API_BASE}/admin/moderation/stats`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(statsResponse.data, null, 2));
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏:', error.response?.data || error.message);
    }

    // 6. –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –Ω–∞–≤—ã–∫–∞–º
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/analytics/skills...');
    try {
      const skillsResponse = await axios.get(`${API_BASE}/admin/analytics/skills`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –Ω–∞–≤—ã–∫–∞–º –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(skillsResponse.data, null, 2));
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–∞–≤—ã–∫–æ–≤:', error.response?.data || error.message);
    }

    // 7. –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('\n7Ô∏è‚É£ –¢–µ—Å—Ç GET /admin/settings...');
    try {
      const settingsResponse = await axios.get(`${API_BASE}/admin/settings`, {
        headers: { 'Authorization': `Bearer ${adminToken}` }
      });
      
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:');
      console.log('   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(settingsResponse.data, null, 2));
      
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.response?.data || error.message);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –†–µ–∑—é–º–µ:');
    console.log('   ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ endpoints');
    console.log('   ‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö');
    console.log('   ‚úÖ –í—ã—è–≤–ª–µ–Ω—ã –æ—Ç–ª–∏—á–∏—è –æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.response?.data || error.message);
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
    console.log('   1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:3000');
    console.log('   2. –£ –≤–∞—Å –µ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å email admin@example.com');
    console.log('   3. –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: admin123456');
    console.log('   4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç —Ä–æ–ª—å ADMIN');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testRealAdminAPI();
