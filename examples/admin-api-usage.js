// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function adminApiExample() {
  console.log('üîß –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ —á–µ—Ä–µ–∑ API\n');

  try {
    // 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('1Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const registerResponse = await axios.post(`${API_BASE}/auth/register`, {
      email: 'admin@example.com',
      password: 'admin123456',
      role: 'ADMIN'
    });

    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log(`   Email: ${registerResponse.data.user.email}`);
    console.log(`   –†–æ–ª—å: ${registerResponse.data.user.role}`);
    console.log(`   –¢–æ–∫–µ–Ω: ${registerResponse.data.accessToken.substring(0, 20)}...`);

    const adminToken = registerResponse.data.accessToken;

    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('\n2Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'admin@example.com',
      password: 'admin123456'
    });

    console.log('‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    console.log(`   –¢–æ–∫–µ–Ω: ${loginResponse.data.accessToken.substring(0, 20)}...`);

    // 3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–π (–ø—Ä–∏–º–µ—Ä)
    console.log('\n3Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–π...');
    try {
      const usersResponse = await axios.get(`${API_BASE}/admin/users`, {
        headers: {
          'Authorization': `Bearer ${adminToken}`
        }
      });
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.data.length}`);
    } catch (error) {
      console.log('‚ÑπÔ∏è  –ê–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', error.response?.data?.message || error.message);
    }

    // 4. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    console.log('\n4Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞...');
    const moderatorResponse = await axios.post(`${API_BASE}/auth/register`, {
      email: 'moderator@example.com',
      password: 'moderator123456',
      role: 'MODERATOR'
    });

    console.log('‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log(`   Email: ${moderatorResponse.data.user.email}`);
    console.log(`   –†–æ–ª—å: ${moderatorResponse.data.user.role}`);

    // 5. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
    console.log('\n5Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞...');
    const moderatorLoginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'moderator@example.com',
      password: 'moderator123456'
    });

    console.log('‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    console.log(`   –¢–æ–∫–µ–Ω: ${moderatorLoginResponse.data.accessToken.substring(0, 20)}...`);

    console.log('\nüéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—é–º–µ:');
    console.log('   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ API');
    console.log('   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ API');
    console.log('   ‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ API');
    console.log('   ‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ API');
    console.log('   ‚úÖ –í—Å–µ —Ä–æ–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
adminApiExample();
