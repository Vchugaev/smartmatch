const axios = require('axios');

const OLLAMA_URL = 'http://109.73.193.10:11434';

async function testDirectChat() {
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π —á–∞—Ç —Å Ollama...\n');
  
  const testMessages = [
    '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
    '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ',
    '–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?',
    '–ö–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞?'
  ];
  
  for (let i = 0; i < testMessages.length; i++) {
    const message = testMessages[i];
    console.log(`üì§ –ó–∞–ø—Ä–æ—Å ${i + 1}: ${message}`);
    
    try {
      const startTime = Date.now();
      
      const response = await axios.post(`${OLLAMA_URL}/api/generate`, {
        model: 'gemma3:latest',
        prompt: message,
        stream: false
      }, {
        timeout: 30000
      });
      
      const processingTime = Date.now() - startTime;
      
      console.log(`‚úÖ –û—Ç–≤–µ—Ç ${i + 1}:`);
      console.log(`ü§ñ ${response.data.response}`);
      console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingTime}ms`);
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
    
    console.log('\n' + '='.repeat(80) + '\n');
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
  }
}

async function testCustomMessage() {
  const customMessage = process.argv[2] || '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?';
  console.log(`üì§ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${customMessage}`);
  
  try {
    const startTime = Date.now();
    
    const response = await axios.post(`${OLLAMA_URL}/api/generate`, {
      model: 'gemma3:latest',
      prompt: customMessage,
      stream: false
    }, {
      timeout: 30000
    });
    
    const processingTime = Date.now() - startTime;
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç AI:');
    console.log(`ü§ñ ${response.data.response}`);
    console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingTime}ms`);
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

async function main() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º Ollama –Ω–∞–ø—Ä—è–º—É—é...\n');
  
  if (process.argv[2]) {
    await testCustomMessage();
  } else {
    await testDirectChat();
  }
  
  console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
  console.log('\nüí° –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:');
  console.log('node test-ollama-direct.js "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"');
}

main().catch(console.error);
